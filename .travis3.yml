
env:
  - SYS=22 ABI="google_apis;armeabi-v7a"
  - SYS=22 ABI="default;armeabi-v7a"
  - SYS=21 ABI="default;armeabi-v7a"
  - SYS=20 ABI="default;armeabi-v7a"
  - SYS=19 ABI="default;armeabi-v7a"


jobs:
  - name: "Android Emulators 4"
    language: generic
    sudo: required
    dist: trusty
    jdk: oraclejdk8
    os: linux
    before_cache:
      - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
      - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      - rm -f  $HOME/.gradle/caches/*/fileHashes/fileHashes.bin
      - rm -f  $HOME/.gradle/caches/*/fileHashes/fileHashes.lock
    cache:
      directories:
        - $HOME/.gradle/caches/
        - $HOME/.gradle/wrapper/
        - $HOME/.android/build-cache
        - $HOME/android-sdk-dl
        - $HOME/android-sdk
    install:
      - mkdir -p $HOME/android-sdk-dl
      - mkdir -p $HOME/android-sdk
      - if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip ; fi
      - unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d $HOME/android-sdk
      - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'tools' > /dev/null
      - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platform-tools' > /dev/null
      - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'build-tools;28.0.2' > /dev/null
      - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platforms;android-27' > /dev/null
      - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platforms;android-22' > /dev/null
      - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'extras;google;m2repository' > /dev/null
      - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'extras;android;m2repository' > /dev/null
      - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'extras;google;google_play_services' > /dev/null
      - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'emulator' > /dev/null
      - yes | $HOME/android-sdk/tools/bin/sdkmanager --licenses
    before_script:
      - export ANDROID_HOME=$HOME/android-sdk/
      - export ANDROID_SDK_ROOT=$HOME/android-sdk
      - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
      - yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
      - $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-$SYS;default;$ABI" > /dev/null
      - $ANDROID_HOME/tools/bin/sdkmanager --list | head -15
      - yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
      - echo no | $ANDROID_HOME/tools/bin/avdmanager create avd --force -n test -k "system-images;android-$SYS;default;$ABI"
      - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &
      - $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop init.svc.bootanim) ]]; do sleep 1; done; input keyevent 82'
      - $ANDROID_HOME/platform-tools/adb shell settings put global window_animation_scale 0 &
      - $ANDROID_HOME/platform-tools/adb shell settings put global transition_animation_scale 0 &
      - $ANDROID_HOME/platform-tools/adb shell settings put global animator_duration_scale 0 &
      - $ANDROID_HOME/platform-tools/adb shell settings put secure show_ime_with_hard_keyboard 0 &
      - $ANDROID_HOME/platform-tools/adb shell input keyevent 82 &
    script: echo done
